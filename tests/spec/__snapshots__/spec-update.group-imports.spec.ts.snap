// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Calling update on existing specs without setup function should import only missing deps and not duplicate deps (BDep is used multiple times),  1`] = `
"import { BDep, LogService, CDep } from '@angular/core';
import { other } from 'other';
import { some } from '../util';
import { MyDep } from '@angular/Common';
import { LibraryClass } from '../shared/library';
import { LibraryClass1 } from '../shared/library';
import { autoSpy } from 'autoSpy';

describe('C', () => {
});

function setup() {
    const aDep = autoSpy(BDep);
    const bDep = autoSpy(BDep);
    const cDep = autoSpy(BDep);
    const dDep = autoSpy(CDep);
    const eDep = autoSpy(MyDep);
    const fDep = autoSpy(LibraryClass);
    const gDep = autoSpy(LibraryClass1);
    const logger = autoSpy(LogService);
    const builder = {
        aDep,
        bDep,
        cDep,
        dDep,
        eDep,
        fDep,
        gDep,
        logger,
        default() {
            return builder;
        },
        build() {
            return new C(aDep, bDep, cDep, dDep, eDep, fDep, gDep, logger);
        },
        
    }
    return builder;
}"
`;

exports[`Calling update on existing specs without setup function should not import deps with no path i.e. from dom or other tslibs, Object, Event 1`] = `
"import { autoSpy } from 'autoSpy';
describe('C', () => {
});

function setup() {
    const aDep = autoSpy(Event);
    let bDep: Object;
    const cDep = autoSpy(Window);
    const builder = {
        aDep,
        bDep,
        cDep,
        default() {
            return builder;
        },
        build() {
            return new C(aDep, bDep, cDep);
        },
        
    }
    return builder;
}"
`;
